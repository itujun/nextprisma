// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Task 1
// Membuat Tabel
// model users {
//   id Int @id @default(autoincrement())
//   firstName String
//   lastName String
//   validated Boolean
//   createdAt DateTime @default(now())
//   updatedAt DateTime
// }


// Task 2
// Relasi antar tabel
// Relasi One to One
// model users {
//   id Int @id @default(autoincrement())
//   firstName String 
//   lastName String
//   validated Boolean
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   todo todo?
// }
// model todo {
//   id Int @id @default(autoincrement())
//   todoText String
//   completed Boolean
//   userId Int @unique
//   user users @relation(fields: [userId], references: [id])
// }


// Task 3
// Relasi antar tabel
// One to Many
// model users{
//   id Int @id @default(autoincrement())
//   firstName String
//   lastName String
//   validated Boolean
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   todo todo[]
// }
// model todo{
//   id Int @id @default(autoincrement())
//   todoText String
//   completed Boolean
//   userId Int
//   user users @relation(fields: [userId], references: [id])
// }


// Task 4
// Relasi antar tabel
// Many to Many
model users {
  idUser Int @id @default(autoincrement())
  firstName String
  lastName String
  validated Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  todo todo[]
}
model todo {
  idTodo Int @id @default(autoincrement())
  todoText String
  completed Boolean
  userId Int
  user users @relation(fields: [userId], references: [idUser])
  tag tags[]
}
model tags {
  idTag Int @id @default(autoincrement())
  tagName String
  todo todo[]
}